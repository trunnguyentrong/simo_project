apiVersion: v1
kind: Secret
metadata:
  name: minio-secret
  namespace: storage
type: Opaque
data:
  accesskey: bWluaW9hZG1pbg==  # base64("minio")
  secretkey: bWluaW9hZG1pbg== # base64("miniominio")

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: storage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - name: minio
        image: quay.io/minio/minio:latest
        args:
          - server
          - /data
          - "--console-address=:9001"
        env:
          - name: MINIO_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: minio-secret
                key: accesskey
          - name: MINIO_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: minio-secret
                key: secretkey
        ports:
          - containerPort: 9000
          - containerPort: 9001
        volumeMounts:
          - name: minio-storage
            mountPath: /data
      volumes:
        - name: minio-storage
          emptyDir: {}  # For persistence, use PVC instead

---
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: storage
spec:
  selector:
    app: minio
  ports:
    - name: api
      port: 9000
      targetPort: 9000
    - name: console
      port: 9001
      targetPort: 9001
  type: NodePort
  
--- 
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-secret
  namespace: storage
type: Opaque
data:
  mongo-root-username: YWRtaW4=   # base64("root")
  mongo-root-password: cGFzc3dvcmQ= # base64("password")

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: storage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:7
        env:
          - name: MONGO_INITDB_ROOT_USERNAME
            valueFrom:
              secretKeyRef:
                name: mongodb-secret
                key: mongo-root-username
          - name: MONGO_INITDB_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mongodb-secret
                key: mongo-root-password
        ports:
          - containerPort: 27017
        volumeMounts:
          - name: mongo-data
            mountPath: /data/db
      volumes:
        - name: mongo-data
          emptyDir: {}  # Use PVC for persistence

---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  namespace: storage
spec:
  selector:
    app: mongodb
  ports:
    - port: 27017
      targetPort: 27017
  type: ClusterIP
